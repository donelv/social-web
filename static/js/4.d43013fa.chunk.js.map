{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","console","log","to","React","connect","DialogItem","path","id","className","style","dialog","active","name","Message","message","maxLength100","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","person","avatar","src","messagesElements","messages","el","dialogsItems","values","sendMessage","newMessageBody","DialogsContainer","compose","dispatch","sendMessageActionCreator"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,0B,oJCGlRC,EAA6B,SAACC,GAChC,MAAO,CACLC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACxCC,EADuC,4JAE3C,WACE,OAAKC,KAAKC,MAAMN,OAIT,cAACG,EAAD,eAAeE,KAAKC,SAHzBC,QAAQC,IAAIH,KAAKC,MAAMN,QAChB,cAAC,IAAD,CAAUS,GAAI,gBALkB,GACbC,IAAMP,WAYtC,OAHiCQ,YAAQb,EAARa,CAC/BP,K,2FCRWQ,EATI,SAACN,GAClB,IAAIO,EAAI,mBAAeP,EAAMQ,IAC7B,OACE,qBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,OAA3C,SACE,cAAC,IAAD,CAAST,GAAII,EAAb,SAAoBP,EAAMa,UCDjBC,EAJC,SAACd,GACf,OAAO,qBAAKS,UAAWC,IAAMK,QAAtB,SAAgCf,EAAMe,W,kCCGzCC,EAAeC,YAAiB,KAmBvBC,cAAU,CAAEC,KAAM,wBAAlBD,EAjBQ,SAAClB,GACtB,OACE,sBAAMoB,SAAUpB,EAAMqB,aAAtB,SACE,gCACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBH,KAAK,iBACLc,YAAa,uBAIf,oGCaOC,EA3BC,SAAC5B,GACf,IAAI6B,EAAkB7B,EAAM8B,YAAYC,QAAQC,KAAI,SAACrB,GAAD,OAClD,sBAAKF,UAAWC,IAAMuB,OAAtB,UACE,qBAAKxB,UAAWC,IAAMwB,OAAtB,SACE,qBAAKC,IAAI,sEAEX,cAAC,EAAD,CAAYtB,KAAMF,EAAOE,KAAML,GAAIG,EAAOH,IAASG,EAAOH,UAG1D4B,EAAmBpC,EAAM8B,YAAYO,SAASL,KAAI,SAACM,GAAD,OACpD,cAAC,EAAD,CAASvB,QAASuB,EAAGvB,SAAcuB,EAAG9B,OAKxC,OACE,sBAAKC,UAAWC,IAAMqB,QAAtB,UACE,qBAAKtB,UAAWC,IAAM6B,aAAtB,SACGV,IAGH,qBAAKpB,UAAWC,IAAM2B,SAAtB,SAAiCD,IACjC,cAAC,EAAD,CAAgBhB,SAVA,SAACoB,GACnBxC,EAAMyC,YAAYD,EAAOE,uB,yBCyBvBC,EAAmBC,YACvBvC,aAdoB,SAACZ,GACrB,MAAO,CACLqC,YAAarC,EAAMqC,gBAGE,SAACe,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAyBJ,SAOtC9C,IAFuBgD,CAGvBhB,GAKae","file":"static/js/4.d43013fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"person\":\"Dialogs_person__2BpLA\",\"avatar\":\"Dialogs_avatar__1hg1l\"};","import React from 'react'\nimport { Redirect } from 'react-router'\nimport { connect } from 'react-redux'\n\nlet mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        console.log(this.props.isAuth)\n        return <Redirect to={'/login'} />\n      }\n      return <Component {...this.props} />\n    }\n  }\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  )\n  return ConnectedRedirectComponent\n}\n","import React from 'react'\nimport style from '../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst DialogItem = (props) => {\n  let path = `/dialogs/${props.id}`\n  return (\n    <div className={style.dialog + ' ' + style.active}>\n      <NavLink to={path}>{props.name}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem\n","import React from 'react'\nimport style from '../Dialogs.module.css'\n\nconst Message = (props) => {\n  return <div className={style.message}>{props.message}</div>\n}\n\nexport default Message\n","import React from 'react'\nimport { Textarea } from '../../common/FormsControls/FormsControls'\nimport {\n  required,\n  maxLengthCreator,\n} from '../../../utils/validators/validators'\nimport { Field, reduxForm } from 'redux-form'\nconst maxLength100 = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          validate={[required, maxLength100]}\n          name=\"newMessageBody\"\n          placeholder={'Enter your message'}\n          //onChange={onMessageChange}\n          //value={props.dialogsPage.newMessageText}\n        ></Field>\n        <button>Отправить</button>\n      </div>\n    </form>\n  )\n}\nexport default reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\n","import React from 'react'\nimport style from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport { Redirect } from 'react-router-dom'\nimport { reduxForm, Field } from 'redux-form'\nimport AddMessageForm from './AddMessageForm/AddMessageForm'\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogsPage.dialogs.map((dialog) => (\n    <div className={style.person}>\n      <div className={style.avatar}>\n        <img src=\"https://iupac.org/wp-content/uploads/2018/05/default-avatar.png\" />\n      </div>\n      <DialogItem name={dialog.name} id={dialog.id} key={dialog.id} />\n    </div>\n  ))\n  let messagesElements = props.dialogsPage.messages.map((el) => (\n    <Message message={el.message} key={el.id} />\n  ))\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody)\n  }\n  return (\n    <div className={style.dialogs}>\n      <div className={style.dialogsItems}>\n        {dialogsElements}\n        {/*Так как есть возможность вывода массива, мы можем вывести массив, состоящий из JSX элементов*/}\n      </div>\n      <div className={style.messages}>{messagesElements}</div>\n      <AddMessageForm onSubmit={addNewMessage} />\n    </div>\n  )\n}\n\nexport default Dialogs\n","import React from 'react'\nimport { sendMessageActionCreator } from '../../redux/dialogs-reducer'\nimport Dialogs from './Dialogs'\nimport { connect } from 'react-redux'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { compose } from 'redux'\n\n/*\nconst DialogsContainer = (props) => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        let state = store.getState().dialogsPage\n        let onMessageChange = (text) => {\n          store.dispatch(onMessageChangeActionCreator(text))\n        }\n        let sendMessage = () => {\n          store.dispatch(sendMessageActionCreator())\n        }\n        return (\n          <Dialogs\n            onMessageChange={onMessageChange}\n            sendMessage={sendMessage}\n            dialogsPage={state}\n          />\n        )\n      }}\n    </StoreContext.Consumer>\n  )\n}\n*/\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  }\n}\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageActionCreator(newMessageBody))\n    },\n  }\n}\n\nconst DialogsContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs)\n/*\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\n*/\nexport default DialogsContainer\n"],"sourceRoot":""}