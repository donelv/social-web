{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","console","log","to","React","connect","module","exports","Post","className","style","post","src","message","likesCount","MyPosts","memo","postsElements","posts","map","p","id","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileInfo","profile","descriptionBlock","photos","large","Object","entries","contacts","arr","href","lookingForAJob","lookingForAJobDescription","fullName","aboutMe","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","setProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.5967bd93.chunk.js","sourcesContent":["import React from 'react'\nimport { Redirect } from 'react-router'\nimport { connect } from 'react-redux'\n\nlet mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) {\n        console.log(this.props.isAuth)\n        return <Redirect to={'/login'} />\n      }\n      return <Component {...this.props} />\n    }\n  }\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  )\n  return ConnectedRedirectComponent\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__1JseI\",\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","import React from 'react'\nimport style from './Post.module.css'\n\nconst Post = (props) => {\n  return (\n    <div className={style.post}>\n      <img src=\"https://i.guim.co.uk/img/media/26392d05302e02f7bf4eb143bb84c8097d09144b/446_167_3683_2210/master/3683.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=49ed3252c0b2ffb49cf8b508892e452d\" />\n      {props.message}\n      <div>\n        <span>like {props.likesCount}</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n","import React from 'react'\nimport Post from './Post/Post'\nimport style from './MyPosts.module.css'\nimport { reduxForm, Field } from 'redux-form'\nimport {\n  maxLengthCreator,\n  required,\n} from '../../../utils/validators/validators'\nimport { Textarea } from '../../common/FormsControls/FormsControls'\n\nconst MyPosts = React.memo((props) => {\n  let postsElements = props.posts.map((p) => (\n    <Post message={p.message} likesCount={p.likesCount} key={p.id} />\n  ))\n\n  let newPostElement = React.createRef()\n\n  let onAddPost = (values) => {\n    props.addPost(values.newPostText)\n  }\n  console.log('RENDER')\n  return (\n    <div className={style.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost} />\n      <div>New posts</div>\n      <div className={style.posts}>{postsElements}</div>\n    </div>\n  )\n})\nconst maxLength10 = maxLengthCreator(10)\nconst AddNewPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n          name=\"newPostText\"\n          placeholder={'Enter new post'}\n          validate={[required, maxLength10]}\n        ></Field>\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n  )\n}\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\n  AddNewPostForm\n)\nexport default MyPosts\n","import React from 'react'\nimport { addPostActionCreator } from '../../../redux/profile-reducer'\nimport MyPosts from './MyPosts'\nimport { connect } from 'react-redux'\n/*\nconst MyPostsContainer = (props) => {\n  return (\n    <StoreContext.Consumer>\n      {(store) => {\n        let state = store.getState()\n\n        let addPost = () => {\n          store.dispatch(addPostActionCreator())\n        }\n\n        let updateNewPostText = (text) => {\n          store.dispatch(onPostChangeActionCreator(text))\n        }\n        return (\n          <MyPosts\n            addPost={addPost}\n            updateNewPostText={updateNewPostText}\n            posts={state.profilePage.posts}\n            newPostText={state.profilePage.newPostText}\n          />\n        )\n      }}\n    </StoreContext.Consumer>\n  )\n}\n*/\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText))\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer\n","import React, { useState, useEffect } from 'react'\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false)\n  let [status, setStatus] = useState(props.status)\n\n  useEffect(() => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    setEditMode(true)\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false)\n    props.updateStatus(status)\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n  return (\n    <>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || '------'}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            value={status}\n            onBlur={deactivateEditMode}\n            autoFocus={true}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ProfileStatusWithHooks\n","import React from 'react'\nimport Preloader from '../../common/Preloader/Preloader'\nimport style from './ProfileInfo.module.css'\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />\n  }\n  /*let contacts = props.profile.contacts\n    .values()\n    .map((element) => <h4>{element}</h4>)\n*/\n  return (\n    <div>\n      {/*<div>\n        <img src=\"https://img.freepik.com/free-photo/city-chicago-downtown-skyscrapers-lake-michigan-cityscape-illinois-usa_146539-29.jpg?size=626&ext=jpg\"></img>\n      </div>*/}\n      <div className={style.descriptionBlock}>\n        <img src={props.profile.photos.large} />\n        <ProfileStatusWithHooks\n          status={props.status}\n          updateStatus={props.updateStatus}\n        />\n        <div>\n          <h3>Contacts</h3>\n          {Object.entries(props.profile.contacts).map((arr) => {\n            if (arr[1] != null) {\n              return (\n                <div>\n                  <h4>\n                    {arr[0]}: <a href={arr[1]}>{arr[1]}</a>\n                  </h4>\n                </div>\n              )\n            } else {\n              return <h4>{arr[0]}: Nope :(</h4>\n            }\n          })}\n\n          <h3>Looking For a job?</h3>\n          {props.profile.lookingForAJob ? (\n            <img src=\"https://img.icons8.com/external-bearicons-gradient-bearicons/64/000000/external-Yes-miscellany-texts-and-badges-bearicons-gradient-bearicons.png\" />\n          ) : (\n            <img src=\"https://img.icons8.com/external-bearicons-gradient-bearicons/64/000000/external-No-yes-or-no-bearicons-gradient-bearicons.png\" />\n          )}\n\n          <h3>What type of job?</h3>\n          {props.profile.lookingForAJobDescription}\n\n          <h3>Full Name</h3>\n          {props.profile.fullName}\n\n          <h3>About Me</h3>\n          {props.profile.aboutMe}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileInfo\n","import React from 'react'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\n\nconst Profile = (props) => {\n  console.log('RENDERED PROFILE')\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer /*store={props.store}*/ />\n    </div>\n  )\n}\n\nexport default Profile\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, withRouter } from 'react-router'\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport {\n  setProfile,\n  getStatus,\n  updateStatus,\n} from '../../redux/profile-reducer'\nimport Profile from './Profile'\n\nclass ProfileContainer extends React.Component {\n  //метод жизненного цикла, сначала отрисовываем (метод render), потом выполняется данный метод и наполняет данными\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    if (!userId) {\n      userId = this.props.authorizedUserId\n      console.log(this.props.authorizedUserId)\n      /*\n      if (!userId) {\n        this.props.history.push('/login')\n      }*/\n    }\n    this.props.setProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n        />\n      </div>\n    )\n  }\n}\n\n//let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth,\n  }\n}\n\n//let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent) //по сути будет новая компонента в которую прокинутся данные из урла\nexport default compose(\n  connect(mapStateToProps, { setProfile, getStatus, updateStatus }),\n  withRouter\n  //withAuthRedirect\n)(ProfileContainer)\n\n//тоже самое делает и connect, но прокидывает в пропсы стейт и коллбэки\n"],"sourceRoot":""}